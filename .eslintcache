[{"/home/nordil/Desktop/tests/src/index.js":"1","/home/nordil/Desktop/tests/src/App.js":"2","/home/nordil/Desktop/tests/src/reportWebVitals.js":"3","/home/nordil/Desktop/tests/src/config/Request.js":"4","/home/nordil/Desktop/tests/src/components/Login.jsx":"5","/home/nordil/Desktop/tests/src/components/Reg.jsx":"6","/home/nordil/Desktop/tests/src/components/Alert.js":"7","/home/nordil/Desktop/tests/src/components/Account.jsx":"8","/home/nordil/Desktop/tests/src/components/Header.jsx":"9"},{"size":582,"mtime":1609881129668,"results":"10","hashOfConfig":"11"},{"size":3840,"mtime":1610535785392,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1609880156499,"results":"13","hashOfConfig":"11"},{"size":399,"mtime":1610535548307,"results":"14","hashOfConfig":"11"},{"size":462,"mtime":1610374083591,"results":"15","hashOfConfig":"11"},{"size":575,"mtime":1610374549321,"results":"16","hashOfConfig":"11"},{"size":246,"mtime":1610364122683,"results":"17","hashOfConfig":"11"},{"size":6104,"mtime":1610963087163,"results":"18","hashOfConfig":"11"},{"size":866,"mtime":1610451180734,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1awcebu",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/nordil/Desktop/tests/src/index.js",[],["40","41"],"/home/nordil/Desktop/tests/src/App.js",["42","43","44"],"import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {get, post, url} from \"./config/Request\";\nimport Login from \"./components/Login\";\nimport {Link, Redirect, Route, Switch} from \"react-router-dom\";\nimport Reg from \"./components/Reg\";\nimport Alert from \"./components/Alert\";\nimport Account from \"./components/Account\";\nimport Header from \"./components/Header\";\n\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            message: '',\n            redirect: false,\n            alert: false,\n            userExist: false,\n            user: ''\n        }\n    }\n    componentDidMount() {\n\n        if (localStorage.getItem('user') !== null  && localStorage.getItem('user') !== ''){\n            this.setState({\n                user: JSON.parse(localStorage.getItem('user')),\n                userExist: true\n            })\n        }else{\n            this.setState({\n                user: false,\n                userExist: false\n            })\n        }\n\n    }\n\n    userLogin = (e) => {\n        e.preventDefault();\n        let data = new FormData(e.target);\n\n        post(data).then(res => {\n    \n            if (res.status){\n               localStorage.setItem('user', JSON.stringify(res));\n                this.setState({\n                    userExist: true\n                })\n            }else{\n                this.setState({\n                    alert: true,\n                    message: res.message\n                })\n                setTimeout(() => {\n                    this.setState({\n                        alert: false\n                    })\n                },2000)\n            }\n        })\n    }\n    userReg = (e) => {\n        e.preventDefault();\n        let data = new FormData(e.target);\n        post(data).then(res => {\n            if (res.status){\n                this.setState({\n                    redirect: true\n                })\n                setTimeout(() => {\n                    this.setState({\n                        redirect: false\n                    })\n                },2000)\n            }else{\n                this.setState({\n                    alert: true,\n                    message: res.message\n                })\n                setTimeout(() => {\n                    this.setState({\n                        alert: false\n                    })\n                },2000)\n            }\n        })\n    }\n    logout = () =>{\n        localStorage.setItem('user', '')\n        this.setState({\n            userExist: false\n        })\n    }\n    render() {\n\n        return (\n            <div className=\"App\">\n                {\n                    this.state.alert?<Alert content={this.state.message}/>:''\n                }\n                {\n                    this.state.redirect? <Redirect to='/login' />:''\n                }\n                {\n                    this.state.userExist?<Redirect to='/account' /> :<Redirect to='/login' />\n                }\n                <Header userExist={this.state.userExist} user={this.state.user} logout={this.logout}/>\n                <Switch>\n                    {\n                        this.state.userExist?\n                            <Route path='/account' >\n                                <Account user={this.state.user}/>\n                            </Route>:\n                            <>\n                                <Route path='/login'>\n                                    <Login login={this.userLogin}/>\n                                </Route>\n                                <Route path='/register'>\n                                    <Reg reg={this.userReg}/>\n                                </Route>\n                            </>\n                    }\n\n                </Switch>\n            </div>\n        )\n    }\n}\n\n\nexport default App;\n","/home/nordil/Desktop/tests/src/reportWebVitals.js",[],"/home/nordil/Desktop/tests/src/config/Request.js",[],"/home/nordil/Desktop/tests/src/components/Login.jsx",[],"/home/nordil/Desktop/tests/src/components/Reg.jsx",[],"/home/nordil/Desktop/tests/src/components/Alert.js",[],"/home/nordil/Desktop/tests/src/components/Account.jsx",["45"],"/home/nordil/Desktop/tests/src/components/Header.jsx",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":4,"column":9,"nodeType":"52","messageId":"53","endLine":4,"endColumn":12},{"ruleId":"50","severity":1,"message":"54","line":4,"column":20,"nodeType":"52","messageId":"53","endLine":4,"endColumn":23},{"ruleId":"50","severity":1,"message":"55","line":6,"column":9,"nodeType":"52","messageId":"53","endLine":6,"endColumn":13},{"ruleId":"50","severity":1,"message":"51","line":2,"column":9,"nodeType":"52","messageId":"53","endLine":2,"endColumn":12},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'get' is defined but never used.","Identifier","unusedVar","'url' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]